/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.sra.kafka.inventory.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ProductMutationResponseAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4086812352480925569L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ProductMutationResponseAvroModel\",\"namespace\":\"com.sra.kafka.inventory.avro.model\",\"fields\":[{\"name\":\"productId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"warehouseId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"mutationStatus\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"mutationType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"timestamp\",\"type\":\"long\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ProductMutationResponseAvroModel> ENCODER =
      new BinaryMessageEncoder<ProductMutationResponseAvroModel>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ProductMutationResponseAvroModel> DECODER =
      new BinaryMessageDecoder<ProductMutationResponseAvroModel>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ProductMutationResponseAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ProductMutationResponseAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ProductMutationResponseAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ProductMutationResponseAvroModel>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ProductMutationResponseAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ProductMutationResponseAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ProductMutationResponseAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ProductMutationResponseAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String productId;
  private java.lang.String warehouseId;
  private java.lang.String mutationStatus;
  private java.lang.String mutationType;
  private int quantity;
  private long timestamp;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ProductMutationResponseAvroModel() {}

  /**
   * All-args constructor.
   * @param productId The new value for productId
   * @param warehouseId The new value for warehouseId
   * @param mutationStatus The new value for mutationStatus
   * @param mutationType The new value for mutationType
   * @param quantity The new value for quantity
   * @param timestamp The new value for timestamp
   */
  public ProductMutationResponseAvroModel(java.lang.String productId, java.lang.String warehouseId, java.lang.String mutationStatus, java.lang.String mutationType, java.lang.Integer quantity, java.lang.Long timestamp) {
    this.productId = productId;
    this.warehouseId = warehouseId;
    this.mutationStatus = mutationStatus;
    this.mutationType = mutationType;
    this.quantity = quantity;
    this.timestamp = timestamp;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return productId;
    case 1: return warehouseId;
    case 2: return mutationStatus;
    case 3: return mutationType;
    case 4: return quantity;
    case 5: return timestamp;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: productId = value$ != null ? value$.toString() : null; break;
    case 1: warehouseId = value$ != null ? value$.toString() : null; break;
    case 2: mutationStatus = value$ != null ? value$.toString() : null; break;
    case 3: mutationType = value$ != null ? value$.toString() : null; break;
    case 4: quantity = (java.lang.Integer)value$; break;
    case 5: timestamp = (java.lang.Long)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'productId' field.
   * @return The value of the 'productId' field.
   */
  public java.lang.String getProductId() {
    return productId;
  }


  /**
   * Sets the value of the 'productId' field.
   * @param value the value to set.
   */
  public void setProductId(java.lang.String value) {
    this.productId = value;
  }

  /**
   * Gets the value of the 'warehouseId' field.
   * @return The value of the 'warehouseId' field.
   */
  public java.lang.String getWarehouseId() {
    return warehouseId;
  }


  /**
   * Sets the value of the 'warehouseId' field.
   * @param value the value to set.
   */
  public void setWarehouseId(java.lang.String value) {
    this.warehouseId = value;
  }

  /**
   * Gets the value of the 'mutationStatus' field.
   * @return The value of the 'mutationStatus' field.
   */
  public java.lang.String getMutationStatus() {
    return mutationStatus;
  }


  /**
   * Sets the value of the 'mutationStatus' field.
   * @param value the value to set.
   */
  public void setMutationStatus(java.lang.String value) {
    this.mutationStatus = value;
  }

  /**
   * Gets the value of the 'mutationType' field.
   * @return The value of the 'mutationType' field.
   */
  public java.lang.String getMutationType() {
    return mutationType;
  }


  /**
   * Sets the value of the 'mutationType' field.
   * @param value the value to set.
   */
  public void setMutationType(java.lang.String value) {
    this.mutationType = value;
  }

  /**
   * Gets the value of the 'quantity' field.
   * @return The value of the 'quantity' field.
   */
  public int getQuantity() {
    return quantity;
  }


  /**
   * Sets the value of the 'quantity' field.
   * @param value the value to set.
   */
  public void setQuantity(int value) {
    this.quantity = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public long getTimestamp() {
    return timestamp;
  }


  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(long value) {
    this.timestamp = value;
  }

  /**
   * Creates a new ProductMutationResponseAvroModel RecordBuilder.
   * @return A new ProductMutationResponseAvroModel RecordBuilder
   */
  public static com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel.Builder newBuilder() {
    return new com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel.Builder();
  }

  /**
   * Creates a new ProductMutationResponseAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ProductMutationResponseAvroModel RecordBuilder
   */
  public static com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel.Builder newBuilder(com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel.Builder other) {
    if (other == null) {
      return new com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel.Builder();
    } else {
      return new com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new ProductMutationResponseAvroModel RecordBuilder by copying an existing ProductMutationResponseAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new ProductMutationResponseAvroModel RecordBuilder
   */
  public static com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel.Builder newBuilder(com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel other) {
    if (other == null) {
      return new com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel.Builder();
    } else {
      return new com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for ProductMutationResponseAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ProductMutationResponseAvroModel>
    implements org.apache.avro.data.RecordBuilder<ProductMutationResponseAvroModel> {

    private java.lang.String productId;
    private java.lang.String warehouseId;
    private java.lang.String mutationStatus;
    private java.lang.String mutationType;
    private int quantity;
    private long timestamp;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.productId)) {
        this.productId = data().deepCopy(fields()[0].schema(), other.productId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.warehouseId)) {
        this.warehouseId = data().deepCopy(fields()[1].schema(), other.warehouseId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.mutationStatus)) {
        this.mutationStatus = data().deepCopy(fields()[2].schema(), other.mutationStatus);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.mutationType)) {
        this.mutationType = data().deepCopy(fields()[3].schema(), other.mutationType);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.quantity)) {
        this.quantity = data().deepCopy(fields()[4].schema(), other.quantity);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[5].schema(), other.timestamp);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing ProductMutationResponseAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.productId)) {
        this.productId = data().deepCopy(fields()[0].schema(), other.productId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.warehouseId)) {
        this.warehouseId = data().deepCopy(fields()[1].schema(), other.warehouseId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.mutationStatus)) {
        this.mutationStatus = data().deepCopy(fields()[2].schema(), other.mutationStatus);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.mutationType)) {
        this.mutationType = data().deepCopy(fields()[3].schema(), other.mutationType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.quantity)) {
        this.quantity = data().deepCopy(fields()[4].schema(), other.quantity);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[5].schema(), other.timestamp);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'productId' field.
      * @return The value.
      */
    public java.lang.String getProductId() {
      return productId;
    }


    /**
      * Sets the value of the 'productId' field.
      * @param value The value of 'productId'.
      * @return This builder.
      */
    public com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel.Builder setProductId(java.lang.String value) {
      validate(fields()[0], value);
      this.productId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'productId' field has been set.
      * @return True if the 'productId' field has been set, false otherwise.
      */
    public boolean hasProductId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'productId' field.
      * @return This builder.
      */
    public com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel.Builder clearProductId() {
      productId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'warehouseId' field.
      * @return The value.
      */
    public java.lang.String getWarehouseId() {
      return warehouseId;
    }


    /**
      * Sets the value of the 'warehouseId' field.
      * @param value The value of 'warehouseId'.
      * @return This builder.
      */
    public com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel.Builder setWarehouseId(java.lang.String value) {
      validate(fields()[1], value);
      this.warehouseId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'warehouseId' field has been set.
      * @return True if the 'warehouseId' field has been set, false otherwise.
      */
    public boolean hasWarehouseId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'warehouseId' field.
      * @return This builder.
      */
    public com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel.Builder clearWarehouseId() {
      warehouseId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'mutationStatus' field.
      * @return The value.
      */
    public java.lang.String getMutationStatus() {
      return mutationStatus;
    }


    /**
      * Sets the value of the 'mutationStatus' field.
      * @param value The value of 'mutationStatus'.
      * @return This builder.
      */
    public com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel.Builder setMutationStatus(java.lang.String value) {
      validate(fields()[2], value);
      this.mutationStatus = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'mutationStatus' field has been set.
      * @return True if the 'mutationStatus' field has been set, false otherwise.
      */
    public boolean hasMutationStatus() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'mutationStatus' field.
      * @return This builder.
      */
    public com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel.Builder clearMutationStatus() {
      mutationStatus = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'mutationType' field.
      * @return The value.
      */
    public java.lang.String getMutationType() {
      return mutationType;
    }


    /**
      * Sets the value of the 'mutationType' field.
      * @param value The value of 'mutationType'.
      * @return This builder.
      */
    public com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel.Builder setMutationType(java.lang.String value) {
      validate(fields()[3], value);
      this.mutationType = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'mutationType' field has been set.
      * @return True if the 'mutationType' field has been set, false otherwise.
      */
    public boolean hasMutationType() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'mutationType' field.
      * @return This builder.
      */
    public com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel.Builder clearMutationType() {
      mutationType = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'quantity' field.
      * @return The value.
      */
    public int getQuantity() {
      return quantity;
    }


    /**
      * Sets the value of the 'quantity' field.
      * @param value The value of 'quantity'.
      * @return This builder.
      */
    public com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel.Builder setQuantity(int value) {
      validate(fields()[4], value);
      this.quantity = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'quantity' field has been set.
      * @return True if the 'quantity' field has been set, false otherwise.
      */
    public boolean hasQuantity() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'quantity' field.
      * @return This builder.
      */
    public com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel.Builder clearQuantity() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public long getTimestamp() {
      return timestamp;
    }


    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel.Builder setTimestamp(long value) {
      validate(fields()[5], value);
      this.timestamp = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public com.sra.kafka.inventory.avro.model.ProductMutationResponseAvroModel.Builder clearTimestamp() {
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ProductMutationResponseAvroModel build() {
      try {
        ProductMutationResponseAvroModel record = new ProductMutationResponseAvroModel();
        record.productId = fieldSetFlags()[0] ? this.productId : (java.lang.String) defaultValue(fields()[0]);
        record.warehouseId = fieldSetFlags()[1] ? this.warehouseId : (java.lang.String) defaultValue(fields()[1]);
        record.mutationStatus = fieldSetFlags()[2] ? this.mutationStatus : (java.lang.String) defaultValue(fields()[2]);
        record.mutationType = fieldSetFlags()[3] ? this.mutationType : (java.lang.String) defaultValue(fields()[3]);
        record.quantity = fieldSetFlags()[4] ? this.quantity : (java.lang.Integer) defaultValue(fields()[4]);
        record.timestamp = fieldSetFlags()[5] ? this.timestamp : (java.lang.Long) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ProductMutationResponseAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<ProductMutationResponseAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ProductMutationResponseAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<ProductMutationResponseAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.productId);

    out.writeString(this.warehouseId);

    out.writeString(this.mutationStatus);

    out.writeString(this.mutationType);

    out.writeInt(this.quantity);

    out.writeLong(this.timestamp);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.productId = in.readString();

      this.warehouseId = in.readString();

      this.mutationStatus = in.readString();

      this.mutationType = in.readString();

      this.quantity = in.readInt();

      this.timestamp = in.readLong();

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.productId = in.readString();
          break;

        case 1:
          this.warehouseId = in.readString();
          break;

        case 2:
          this.mutationStatus = in.readString();
          break;

        case 3:
          this.mutationType = in.readString();
          break;

        case 4:
          this.quantity = in.readInt();
          break;

        case 5:
          this.timestamp = in.readLong();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










