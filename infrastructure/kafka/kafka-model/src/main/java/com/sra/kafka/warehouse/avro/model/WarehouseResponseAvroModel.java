/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.sra.kafka.warehouse.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class WarehouseResponseAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1176839390840290069L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"WarehouseResponseAvroModel\",\"namespace\":\"com.sra.kafka.warehouse.avro.model\",\"fields\":[{\"name\":\"warehouseId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"location\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"capacity\",\"type\":\"int\"},{\"name\":\"status\",\"type\":{\"type\":\"enum\",\"name\":\"WarehouseStatus\",\"symbols\":[\"ACTIVE\",\"INACTIVE\",\"CLOSED\"]}},{\"name\":\"failureMessages\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<WarehouseResponseAvroModel> ENCODER =
      new BinaryMessageEncoder<WarehouseResponseAvroModel>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<WarehouseResponseAvroModel> DECODER =
      new BinaryMessageDecoder<WarehouseResponseAvroModel>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<WarehouseResponseAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<WarehouseResponseAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<WarehouseResponseAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<WarehouseResponseAvroModel>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this WarehouseResponseAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a WarehouseResponseAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a WarehouseResponseAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static WarehouseResponseAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String warehouseId;
  private java.lang.String name;
  private java.lang.String location;
  private int capacity;
  private com.sra.kafka.warehouse.avro.model.WarehouseStatus status;
  private java.util.List<java.lang.String> failureMessages;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public WarehouseResponseAvroModel() {}

  /**
   * All-args constructor.
   * @param warehouseId The new value for warehouseId
   * @param name The new value for name
   * @param location The new value for location
   * @param capacity The new value for capacity
   * @param status The new value for status
   * @param failureMessages The new value for failureMessages
   */
  public WarehouseResponseAvroModel(java.lang.String warehouseId, java.lang.String name, java.lang.String location, java.lang.Integer capacity, com.sra.kafka.warehouse.avro.model.WarehouseStatus status, java.util.List<java.lang.String> failureMessages) {
    this.warehouseId = warehouseId;
    this.name = name;
    this.location = location;
    this.capacity = capacity;
    this.status = status;
    this.failureMessages = failureMessages;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return warehouseId;
    case 1: return name;
    case 2: return location;
    case 3: return capacity;
    case 4: return status;
    case 5: return failureMessages;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: warehouseId = value$ != null ? value$.toString() : null; break;
    case 1: name = value$ != null ? value$.toString() : null; break;
    case 2: location = value$ != null ? value$.toString() : null; break;
    case 3: capacity = (java.lang.Integer)value$; break;
    case 4: status = (com.sra.kafka.warehouse.avro.model.WarehouseStatus)value$; break;
    case 5: failureMessages = (java.util.List<java.lang.String>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'warehouseId' field.
   * @return The value of the 'warehouseId' field.
   */
  public java.lang.String getWarehouseId() {
    return warehouseId;
  }


  /**
   * Sets the value of the 'warehouseId' field.
   * @param value the value to set.
   */
  public void setWarehouseId(java.lang.String value) {
    this.warehouseId = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'location' field.
   * @return The value of the 'location' field.
   */
  public java.lang.String getLocation() {
    return location;
  }


  /**
   * Sets the value of the 'location' field.
   * @param value the value to set.
   */
  public void setLocation(java.lang.String value) {
    this.location = value;
  }

  /**
   * Gets the value of the 'capacity' field.
   * @return The value of the 'capacity' field.
   */
  public int getCapacity() {
    return capacity;
  }


  /**
   * Sets the value of the 'capacity' field.
   * @param value the value to set.
   */
  public void setCapacity(int value) {
    this.capacity = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public com.sra.kafka.warehouse.avro.model.WarehouseStatus getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(com.sra.kafka.warehouse.avro.model.WarehouseStatus value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'failureMessages' field.
   * @return The value of the 'failureMessages' field.
   */
  public java.util.List<java.lang.String> getFailureMessages() {
    return failureMessages;
  }


  /**
   * Sets the value of the 'failureMessages' field.
   * @param value the value to set.
   */
  public void setFailureMessages(java.util.List<java.lang.String> value) {
    this.failureMessages = value;
  }

  /**
   * Creates a new WarehouseResponseAvroModel RecordBuilder.
   * @return A new WarehouseResponseAvroModel RecordBuilder
   */
  public static com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel.Builder newBuilder() {
    return new com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel.Builder();
  }

  /**
   * Creates a new WarehouseResponseAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new WarehouseResponseAvroModel RecordBuilder
   */
  public static com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel.Builder newBuilder(com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel.Builder other) {
    if (other == null) {
      return new com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel.Builder();
    } else {
      return new com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new WarehouseResponseAvroModel RecordBuilder by copying an existing WarehouseResponseAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new WarehouseResponseAvroModel RecordBuilder
   */
  public static com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel.Builder newBuilder(com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel other) {
    if (other == null) {
      return new com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel.Builder();
    } else {
      return new com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for WarehouseResponseAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<WarehouseResponseAvroModel>
    implements org.apache.avro.data.RecordBuilder<WarehouseResponseAvroModel> {

    private java.lang.String warehouseId;
    private java.lang.String name;
    private java.lang.String location;
    private int capacity;
    private com.sra.kafka.warehouse.avro.model.WarehouseStatus status;
    private java.util.List<java.lang.String> failureMessages;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.warehouseId)) {
        this.warehouseId = data().deepCopy(fields()[0].schema(), other.warehouseId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.location)) {
        this.location = data().deepCopy(fields()[2].schema(), other.location);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.capacity)) {
        this.capacity = data().deepCopy(fields()[3].schema(), other.capacity);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.status)) {
        this.status = data().deepCopy(fields()[4].schema(), other.status);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.failureMessages)) {
        this.failureMessages = data().deepCopy(fields()[5].schema(), other.failureMessages);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing WarehouseResponseAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.warehouseId)) {
        this.warehouseId = data().deepCopy(fields()[0].schema(), other.warehouseId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.location)) {
        this.location = data().deepCopy(fields()[2].schema(), other.location);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.capacity)) {
        this.capacity = data().deepCopy(fields()[3].schema(), other.capacity);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.status)) {
        this.status = data().deepCopy(fields()[4].schema(), other.status);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.failureMessages)) {
        this.failureMessages = data().deepCopy(fields()[5].schema(), other.failureMessages);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'warehouseId' field.
      * @return The value.
      */
    public java.lang.String getWarehouseId() {
      return warehouseId;
    }


    /**
      * Sets the value of the 'warehouseId' field.
      * @param value The value of 'warehouseId'.
      * @return This builder.
      */
    public com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel.Builder setWarehouseId(java.lang.String value) {
      validate(fields()[0], value);
      this.warehouseId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'warehouseId' field has been set.
      * @return True if the 'warehouseId' field has been set, false otherwise.
      */
    public boolean hasWarehouseId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'warehouseId' field.
      * @return This builder.
      */
    public com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel.Builder clearWarehouseId() {
      warehouseId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel.Builder setName(java.lang.String value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'location' field.
      * @return The value.
      */
    public java.lang.String getLocation() {
      return location;
    }


    /**
      * Sets the value of the 'location' field.
      * @param value The value of 'location'.
      * @return This builder.
      */
    public com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel.Builder setLocation(java.lang.String value) {
      validate(fields()[2], value);
      this.location = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'location' field has been set.
      * @return True if the 'location' field has been set, false otherwise.
      */
    public boolean hasLocation() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'location' field.
      * @return This builder.
      */
    public com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel.Builder clearLocation() {
      location = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'capacity' field.
      * @return The value.
      */
    public int getCapacity() {
      return capacity;
    }


    /**
      * Sets the value of the 'capacity' field.
      * @param value The value of 'capacity'.
      * @return This builder.
      */
    public com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel.Builder setCapacity(int value) {
      validate(fields()[3], value);
      this.capacity = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'capacity' field has been set.
      * @return True if the 'capacity' field has been set, false otherwise.
      */
    public boolean hasCapacity() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'capacity' field.
      * @return This builder.
      */
    public com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel.Builder clearCapacity() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public com.sra.kafka.warehouse.avro.model.WarehouseStatus getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel.Builder setStatus(com.sra.kafka.warehouse.avro.model.WarehouseStatus value) {
      validate(fields()[4], value);
      this.status = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel.Builder clearStatus() {
      status = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'failureMessages' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getFailureMessages() {
      return failureMessages;
    }


    /**
      * Sets the value of the 'failureMessages' field.
      * @param value The value of 'failureMessages'.
      * @return This builder.
      */
    public com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel.Builder setFailureMessages(java.util.List<java.lang.String> value) {
      validate(fields()[5], value);
      this.failureMessages = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'failureMessages' field has been set.
      * @return True if the 'failureMessages' field has been set, false otherwise.
      */
    public boolean hasFailureMessages() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'failureMessages' field.
      * @return This builder.
      */
    public com.sra.kafka.warehouse.avro.model.WarehouseResponseAvroModel.Builder clearFailureMessages() {
      failureMessages = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public WarehouseResponseAvroModel build() {
      try {
        WarehouseResponseAvroModel record = new WarehouseResponseAvroModel();
        record.warehouseId = fieldSetFlags()[0] ? this.warehouseId : (java.lang.String) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.String) defaultValue(fields()[1]);
        record.location = fieldSetFlags()[2] ? this.location : (java.lang.String) defaultValue(fields()[2]);
        record.capacity = fieldSetFlags()[3] ? this.capacity : (java.lang.Integer) defaultValue(fields()[3]);
        record.status = fieldSetFlags()[4] ? this.status : (com.sra.kafka.warehouse.avro.model.WarehouseStatus) defaultValue(fields()[4]);
        record.failureMessages = fieldSetFlags()[5] ? this.failureMessages : (java.util.List<java.lang.String>) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<WarehouseResponseAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<WarehouseResponseAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<WarehouseResponseAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<WarehouseResponseAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










